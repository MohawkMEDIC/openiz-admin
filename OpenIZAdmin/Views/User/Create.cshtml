@model OpenIZAdmin.Models.UserModels.CreateUserModel
@{
    ViewBag.Title = Locale.CreateUser_Heading;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.CreateUser_Heading</span>
    </div>
    <div class="panel panel-body">
        @using (Html.BeginForm("Create", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.Username, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Username, new { id = "userName", @class = "form-control", @title = Locale.ToolTip_Username, autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", title = Locale.ToolTip_Password, autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", title = Locale.ToolTip_Password, autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.GivenNames, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.ListBoxFor(m => m.GivenNames, new List<SelectListItem>(), new { @class = "dynamic-dropdown-multiple form-control", multiple = "multiple", title = Locale.ToolTip_GivenNamesListBox })
                    @Html.ValidationMessageFor(m => m.GivenNames, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Surnames, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.ListBoxFor(m => m.Surnames, new List<SelectListItem>(), new { @class = "dynamic-dropdown-multiple form-control", multiple = "multiple", title = Locale.ToolTip_SurnamesListBox })
                    @Html.ValidationMessageFor(m => m.Surnames, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Language, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Language, Model.LanguageList, new { @class = "form-control", title = Locale.ToolTip_Language })
                    @Html.ValidationMessageFor(m => m.Language, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Roles, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Roles, Model.RolesList, new { @class = "dynamic-dropdown form-control", multiple = "multiple", title = Locale.ToolTip_Roles })
                    @Html.ValidationMessageFor(m => m.Roles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Facility, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.Facility, new List<SelectListItem>(), new { @class = "place-search form-control", multiple = "multiple", title = Locale.ToolTip_Facilities })
                    @Html.ValidationMessageFor(m => m.Facility, "", new { @class = "text-danger" })
                </div>
            </div>           

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneType, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.PhoneType, Model.PhoneTypeList, new { @class = "form-control", title = Locale.ToolTip_PhoneType })
                    @Html.ValidationMessageFor(m => m.PhoneType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", title = Locale.ToolTip_UserEmail })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a href="@Url.Action("Index")" class="btn btn-danger">@Locale.Cancel</a>
                    <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" title="@Locale.ToolTip_Submit">@Locale.Submit</button>
                </div>
            </div>}
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function ()
        {
            $('.dynamic-dropdown').select2({
                tags: false,
                tokenSeparators: [','],
                width: '100%'
            });

            $('.dynamic-dropdown-multiple').select2({

                createTag: function (params) {
                    var term = $.trim(params.term);

                    if (!term.match(@Constants.RegExSelect2StringInput)) {
                        return null;
                    }
                    return {
                        id: term,
                        text: term,
                        newTag: true
                    }
                },

                "language": {
                    "noResults": function () {
                        return "@Locale.Select2SpecialCharErrorMessage";
                    }
                },
                escapeMarkup: function (markup) {
                    return markup;
                },

                tags: true,
                tokenSeparators: [','],
                width: '100%',
                maximumInputLength: 100
            });
        });
    </script>

}