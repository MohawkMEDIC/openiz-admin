@model OpenIZAdmin.Models.AccountModels.UpdateProfileModel
@{
    ViewBag.Title = Locale.UpdateProfile;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.UpdateProfile</span>
    </div>
    <div class="panel panel-body">

        @using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="form-group">
                @Html.LabelFor(m => m.GivenNames, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.ListBoxFor(m => m.GivenNames, Model.GivenNamesList, new { @class = "dynamic-dropdown-multiple form-control", multiple = "multiple", title = Locale.ToolTip_GivenNamesListBox })
                    @Html.ValidationMessageFor(m => m.GivenNames, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Surnames, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.ListBoxFor(m => m.Surnames, Model.SurnamesList, new { @class = "dynamic-dropdown-multiple form-control", multiple = "multiple", title = Locale.ToolTip_SurnamesListBox })
                    @Html.ValidationMessageFor(m => m.Surnames, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Language, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Language, Model.LanguageList, new { @class = "form-control", title = Locale.ToolTip_Language })
                    @Html.ValidationMessageFor(m => m.Language, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Facility, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Facility, Model.FacilityList, new { @class = "place-search form-control", multiple = "multiple", title = Locale.ToolTip_Facilities })
                    @Html.ValidationMessageFor(m => m.Facility, "", new { @class = "text-danger" })
                </div>
            </div>            

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneType, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.PhoneType, Model.PhoneTypeList, new { @class = "form-control", title = Locale.ToolTip_PhoneType })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", title = Locale.ToolTip_UserEmail })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10 pull-right">
                    <a href="@(Request.UrlReferrer ?? new Uri(Request.Url.GetLeftPart(UriPartial.Authority)))" class="btn btn-danger">@Locale.Cancel</a>
                    <button type="submit" class="btn btn-primary" title="@Locale.ToolTip_Submit">@Locale.Save</button>
                </div>
            </div>
        }
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            $('.dynamic-dropdown-multiple').select2({

                createTag: function (params) {
                    var term = $.trim(params.term);

                    //if (!term.match(/^[\w()+\-\[\]{}]+$/g)) {
                    if (!term.match(@Constants.RegExSelect2StringInput)) {
                        return null;
                    }
                    return {
                        id: term,
                        text: term,
                        newTag: true
                    }
                },

                "language": {
                    "noResults": function () {
                        return "@Locale.Select2SpecialCharErrorMessage";
                    }
                },
                escapeMarkup: function (markup) {
                    return markup;
                },

                tags: true,
                tokenSeparators: [','],
                width: '100%',
                maximumInputLength: 100
            });

        });
    </script>
}