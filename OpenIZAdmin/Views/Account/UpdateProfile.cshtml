@model OpenIZAdmin.Models.AccountModels.UpdateProfileModel
@{
    ViewBag.Title = Locale.UpdateProfile;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.UpdateProfile</span>
    </div>
    <div class="panel panel-body">

        @using (Html.BeginForm("UpdateProfile", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(m => m.GivenName, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.GivenName, new { @class = "tokenfield form-control", title = Locale.ToolTip_GivenNamesListBox })
                    @Html.ValidationMessageFor(m => m.GivenName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Surname, new { @class = "tokenfield form-control", multiple = "multiple", title = Locale.ToolTip_SurnamesListBox })
                    @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Language, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Language, Model.LanguageList, new { @class = "form-control", title = Locale.ToolTip_Language })
                    @Html.ValidationMessageFor(m => m.Language, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Facility, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.Facility, Model.FacilityList, new { @class = "place-search form-control", multiple = "multiple", title = Locale.ToolTip_Facilities })
                    @Html.ValidationMessageFor(m => m.Facility, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneType, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(m => m.PhoneType, Model.PhoneTypeList, new { @class = "form-control", title = Locale.ToolTip_PhoneType })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", title = Locale.ToolTip_UserEmail })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10 pull-right">
                    <a href="@(Request.UrlReferrer ?? new Uri(Request.Url.GetLeftPart(UriPartial.Authority)))" class="btn btn-danger">@Locale.Cancel</a>
                    <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" title="@Locale.ToolTip_Submit">@Locale.Save</button>
                </div>
            </div>
        }
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/bootstrap-tokenfield")

    <script type="text/javascript">
        $(document).ready(function ()
        {
            $(".tokenfield").tokenfield(
            {
                delimiter: [",", " "]
            });

            $(".tokenfield").on("tokenfield:createtoken", function(e)
            {
                var expression = @Constants.RegExSelect2StringInput;
                var valid = expression.test(e.attrs.value);

                if (!valid)
                {
                    e.preventDefault();
                }
            });
        });
    </script>
}