@using OpenIZAdmin.Models
@model OpenIZAdmin.Models.RoleModels.EditRoleModel
@{
    ViewBag.Title = Locale.EditRole_Heading;
}

@Html.Partial("_ObsoleteWarningPartial", new ObsoleteWarningViewModel(Model.IsObsolete, Locale.RoleNotActive))

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.EditRole_Heading</span>
    </div>    
    <div class="panel panel-body">
        @using (Html.BeginForm("Edit", "Role", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-md-12">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", title = Locale.ToolTip_RoleName })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", cols = "20", rows = "3", title = Locale.ToolTip_RoleDescription })
                                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Policies, new { @class = "col-md-2 control-label" })
                            <div class="col-md-8">
                                @Html.ListBoxFor(m => m.Policies, Model.PoliciesList, new { @class = "dynamic-dropdown form-control", multiple = "multiple", title = Locale.ToolTip_Policies })
                                @Html.ValidationMessageFor(m => m.Policies, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-8">
                                <a href="@Url.Action("ViewRole", new { id = Model.Id })" class="btn btn-danger">@Locale.Cancel</a>
                                @if (Model.IsObsolete)
                                {
                                    <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" disabled="disabled" title="@Locale.ToolTip_Submit">@Locale.CannotUpdateNotActive</button>  }
                                else
                                {
                                    <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" title="@Locale.ToolTip_Submit">@Locale.Submit</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }


        <div class="form-group col-md-offset-2 col-md-8">
            <div class="pull-right">
                @if (!Model.IsObsolete)
                {
                    using (Html.BeginForm("Delete", "Role", new { id = Model.Id }, FormMethod.Post, new { @class = "inlineForm form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-danger">
                            @Locale.Deactivate
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    }
                }
                else
                {
                    using (Html.BeginForm("Activate", "Role", new { id = Model.Id }, FormMethod.Post, new { @class = "inlineForm form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-success">
                            @Locale.Activate
                            <span class="glyphicon glyphicon-upload"></span>
                        </button>
                    }
                }
            </div>
        </div>

    </div>
    
</div>

@Html.Partial("_PoliciesPartial", Model.RolePolicies)


@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            
            $('.dynamic-dropdown').select2({
                tags: false,
                tokenSeparators: [','],
                width: '100%'
            });            
            
            $('#rolePoliciesTable').DataTable({
                "language":
                {
                    "url": "/Content/datatable-locales/" + getCookie("@LocalizationConfig.LanguageCookieName") + ".json"
                },
                order: [],
                columns: [
                  { "orderable": false },
                  null,
                  null,
                  null,
                  null,
                  null
                ]
            });

        });
    </script>

}

